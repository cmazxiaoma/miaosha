#启动端口
server.port=9090

#设置session失效时间，单位为s
server.session.timeout = 1800

#解决tomcat乱码
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

#Redis
spring.redis.host=
spring.redis.port=6379
#reids超时连接时间
spring.redis.timeout=1000
spring.redis.password=
#连接池最大连接数
spring.redis.pool.max-active=1000
#连接池最大空闲数
spring.redis.pool.max-idle=500
#连接池最大等待时间
spring.redis.pool.max-wait=1000

#mybatis配置
mybatis.type-aliases-package=com.cmazxiaoma.seckill
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
mybatis.mapper-locations=classpath:com/cmazxiaoma/seckill/dao/*.xml

# 当出现404错误的时候，抛出异常即可
spring.mvc.throw-exception-if-no-handler-found=true

#static资源
spring.resources.add-mappings=false
#单位为s
spring.resources.cache-period=3600
spring.resources.chain.cache=true
#启动spring资源处理链
spring.resources.chain.enabled=true
#对静态资源进行压缩
spring.resources.chain.gzipped=true
#开启html5应用的缓存
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

#security配置
security.user.name=root
security.user.password=root
security.basic.enabled=false

#rabbtisMQ配置
spring.rabbitmq.host=
spring.rabbitmq.port=5672
spring.rabbitmq.username=
spring.rabbitmq.password=
spring.rabbitmq.virtual-host=/
#消费者数量
spring.rabbitmq.listener.simple.concurrency=10
#最大消费者数量
spring.rabbitmq.listener.simple.max-concurrency=10
#消费者每次从队列获取的消息数量
spring.rabbitmq.listener.simple.prefetch=1
#消费者自动启动
spring.rabbitmq.listener.simple.auto-startup=true
#消费失败，自动重新入队
spring.rabbitmq.listener.simple.default-requeue-rejected=true
#启动发送重试策略
spring.rabbitmq.template.retry.enabled=true
#初始重试间隔为1s
spring.rabbitmq.template.retry.initial-interval=1000
#重试的最大次数
spring.rabbitmq.template.retry.max-attempts=3
#重试间隔最多10s
spring.rabbitmq.template.retry.max-interval=10000
#每次重试的因子是1.0 等差
spring.rabbitmq.template.retry.multiplier=1.0

#Thymeleaf配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5

#驱动配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.url=
spring.datasource.druid.username=
spring.datasource.druid.password=
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver

#连接池的配置信息
#初始化连接
spring.datasource.druid.initial-size=100
#最小空闲连接，连接池容许保持空闲状态的最小连接，低于这个数量将创建新的连接，如果为0则不创建
spring.datasource.druid.min-idle=100
#最大活动连接，连接池在同一时间能够分配的最大活动连接的数量
spring.datasource.druid.max-active=1000
#最大等待时间，当没有可用连接时，超过时间则抛出异常
spring.datasource.druid.max-wait=60000
#在空闲连接回收器线程运行期间休眠的时间值
spring.datasource.druid.time-between-eviction-runs-millis=60000
#连接在池中保持空闲而不被空闲连接回收器线程回收的最小时间值
spring.datasource.druid.min-evictable-idle-time-millis=300000
#SQL查询，用来验证从连接池取出的连接，在连接返回调用者之前，如果指定，则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收期进行检验，如果检验失败，则连接将被池中去除
#设置为true后如果要生效， validation-query参数必须要设置非空字符串
spring.datasource.druid.test-while-idle=true
#指明是否在池中取出连接前进行验证，如果检验失败，则从池中去除连接并且取出另一个
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-borrow=false
#指明是否归还到池中前进行检验
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-return=false
#开启池中的prepared statement池功能
spring.datasource.druid.pool-prepared-statements=true
#prepared statement池能够同时分配的打开的statements的最大数量
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置监控统计拦截的filters
spring.datasource.druid.filters=stat,wall,log4j
#通过connection-properties属性来打开mergeSql功能，慢sql记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true